<?xml version="1.0" encoding="UTF-8"?>
<!-- 从高到地低 OFF 、 FATAL 、 ERROR 、 WARN 、 INFO 、 DEBUG 、 TRACE 、 ALL -->
<!-- 日志输出规则  根据当前ROOT 级别，日志输出时，级别高于root默认的级别时  会输出 -->
<!-- 以下  每个配置的 filter 是过滤掉输出文件里面，会出现高级别文件，依然出现低级别的日志信息，通过filter 过滤只记录本级别的日志-->

<!-- 属性描述 scan：设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true
             scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
             debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。 -->
<configuration scan="false" scanPeriod="60 seconds" debug="false">
    <!-- 定义日志文件 输入位置 -->
    <property name="logDir" value="."/>
    <!-- 日志最大的历史 60天 -->
    <property name="maxHistory" value="60"/>
    <property name="maxFileSize" value="300MB"/>

    <logger name="java.sql" level="ERROR"/>
    <logger name="com.ibatis" level="ERROR"/>
    <logger name="org.springframework" level="ERROR"/>
    <logger name="org.springframework.data.mongodb.core" level="ERROR"/>
    <logger name="org.springframework.web.filter.CommonsRequestLoggingFilter" level="DEBUG"/>
    <logger name="com.zaxxer" level="ERROR"/>
    <logger name="org.mongodb" level="ERROR"/>
    <logger name="io.undertow" level="ERROR"/>
    <logger name="com.ktjr" level="DEBUG"/>
    <logger name="com.github" level="DEBUG"/>

    <!-- 默认配置 -->
    <springProfile name="default">
        <include resource="org/springframework/boot/logging/logback/base.xml" />
    </springProfile>

    <!-- 测试环境 -->
    <springProfile name="test">
        <property name="logPattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [${spring.application.name:-},%X{traceId:-},%X{spanId:-}] [%thread] %-5level %logger{36}.%M:%line - %msg%n"/>

        <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${logDir}/${spring.application.name}.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <!-- 按天回滚 daily -->
                <fileNamePattern>${logDir}/%d{yyyy-MM, aux}/%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
                <!-- 日志最大的历史 60天 -->
                <maxHistory>${maxHistory}</maxHistory>
                <maxFileSize>${maxFileSize}</maxFileSize>
            </rollingPolicy>
            <encoder>
                <pattern>${logPattern}</pattern>
            </encoder>
        </appender>
        <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>${logPattern}</pattern>
            </encoder>
        </appender>
        <root level="INFO">
            <!-- 文件输出 -->
            <appender-ref ref="file"/>
            <appender-ref ref="console"/>
        </root>

    </springProfile>

    <!-- 生产环境 -->
    <springProfile name="pro">
        <property name="logPattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} %5p [${spring.application.name:-},%X{traceId:-},%X{spanId:-}] [%thread] %-5level %logger{36}.%M:%line - %msg%n"/>

        <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
            <file>${logDir}/${spring.application.name}.log</file>
            <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
                <!-- 按天回滚 daily -->
                <fileNamePattern>${logDir}/%d{yyyy-MM, aux}/%d{yyyy-MM-dd}-%i.log.gz</fileNamePattern>
                <!-- 日志最大的历史 60天 -->
                <maxHistory>${maxHistory}</maxHistory>
                <maxFileSize>${maxFileSize}</maxFileSize>
            </rollingPolicy>
            <encoder>
                <pattern>${logPattern}</pattern>
            </encoder>
        </appender>
        <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>${logPattern}</pattern>
            </encoder>
        </appender>
        <root level="INFO">
            <!-- 文件输出 -->
            <appender-ref ref="file"/>
        </root>
    </springProfile>

</configuration>
